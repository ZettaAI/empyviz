[build-system]
requires = [
    "setuptools >= 44.6.0",
    "setuptools < 64.0.0",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "zetta_utils"
description = "Zetta AI Connectomics toolkit"
readme = "README.md"
authors = [{name = "Zetta AI team", email = "sergiy@zetta.ai"}]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
keywords = ["neuroscience connectomics EM"]
license = {text = "MIT"}
urls = {Homepage = "https://github.com/zettaai/zetta_utils"}
requires-python = ">= 3.8"
dependencies = [
    "attrs >= 21.3",
    "typeguard >= 2.13.3",
    "cachetools >= 5.2.0",
    "fsspec >= 2022.8.2",
    "rich >= 12.6.0"
]
dynamic = ["version"]

[project.optional-dependencies]
cli = [
    "click >= 8.0.1"
]
tensor-typing = [
    "torch >= 1.11.0",
    "numpy >= 1.23.1",
]
tensor-ops = [
    "connected-components-3d >= 3.10.0",
    "fastremap >= 1.12.2",
    "einops >= 0.4.1",
    "zetta_utils[tensor_typing]"
]
viz = [
    "zetta_utils[tensor_ops]",
    "matplotlib >= 3.5.2",
    "ipywidgets >= 7.7.0",
    "opencv-python >= 4.5.5"
]
cloudvol = [
    "cloud-volume >= 8.7.0",
    "zetta_utils[tensor_ops]"
]
augmentations = [
    "zetta_utils[tensor_ops]"
]
convnet = [
    "torch >= 1.11.0",
    "artificery >= 0.0.3.3"
]
alignment = [
    "metroem >= 0.1.2",
    "torchfields >= 0.1.2",
]
mazepa = [
    "coolname >= 1.1.0",
    "task-queue >= 2.12.0",
    "boto3 >= 1.24.68",
]
training = [
    "zetta_utils[tensor_ops,cloudvol,convnet]",
    "torch >= 1.11.0",
    "pytorch-lightning >= 1.6.5",
    "wandb >= 0.13.1",
    "gcsfs >= 2022.7.1"
]
docs = [
    "piccolo_theme >= 0.11.1",
    "sphinx-autodoc-typehints >= 1.19.0",
    "sphinx-notfound-page >= 0.8.3",
    "sphinx_copybutton >= 0.5.0",
]
types = [
    "types-Pillow == 9.3.0.1",
    "types-cachetools == 5.2.1",
]
test = [
    "zetta_utils[types]",
    "docker == 6.0.0",
    "black == 21.9b0",
    "click == 8.0.1", # for black to work
    "pydocstyle == 6.1.1",
    "flake8 == 4.0.1",
    "mypy == 0.991",
    "mypy-extensions == 0.4.3",
    "pytest == 7.1.1",
    "pytest-cov == 3.0.0",
    "pytest-mock == 3.8.2",
    "pylint == 2.13.9",
    "isort == 5.10.1",
    "pre-commit == 2.19.0",
    "moto == 1.3.13",
]
modules = [ # put them in order of dependencies
    "zetta_utils[tensor_ops, viz, cli]",
    "zetta_utils[cloudvol,alignment]",
    "zetta_utils[training,mazepa]",
]
all = [
    "zetta_utils[modules,docs,test]",
]

[project.scripts]
zetta = "zetta_utils.cli.main:cli"

[tool.setuptools]
py-modules = []

[tool.black]
line-length = 99
target-version = ["py38","py39"]

[tool.pylint.format]
max-line-length = 99

[tool.pylint.basic]
good-names = '''sm,lr,ts,df,e,i,j,k,id,logger,n,on,tz,x,y,z,r,ex,ey,cv,s,f,v,a,b,mu,fn'''

[tool.pylint.message_control]
disable = '''duplicate-code,C0330,cyclic-import,too-many-arguments,missing-docstring,too-few-public-methods,logging-fstring-interpolation,not-callable,no-member,unsubscriptable-object,pointless-string-statement'''
extension-pkg-allow-list = [
  "pymssql._mssql",
]

[tool.pylint.miscellaneous]
notes = '''FIXME,XXX'''

[tool.pylint.similarities]
min-similarity-lines = 4
ignore-comments = "yes"
ignore-docstrings = "yes"
ignore-imports = "yes"

[tool.pylint.main]
extension-pkg-whitelist="numpy,cc3d,fastremap"
ignore-paths=["^docs/*"]

[tool.pylint.options]
generated-members="torch.*"

[tool.pytest.ini_options]
addopts = "-ra --cov=zetta_utils --cov-report=term-missing --strict-markers --ignore=.eggs --tb=short --junitxml=test-results.xml --cov-report=html --cov-report=xml"
testpaths = ["tests"]
norecursedirs = ".env .git .venv build dist "
python_files = "test.py tests.py test_*.py *_test.py"

[tool.mypy]
ignore_missing_imports = true
warn_unreachable = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
implicit_reexport = true
no_implicit_optional = true
plugins = "zetta_utils.mazepa.mypy_plugin"

[tool.isort]
skip = ["__init__.py"]
